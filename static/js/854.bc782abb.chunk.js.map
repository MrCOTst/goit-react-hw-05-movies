{"version":3,"file":"static/js/854.bc782abb.chunk.js","mappings":"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","sources":["components/GoBackButton.js","pages/MovieDetails.styled.js","pages/MovieDetails.jsx","service/API.js"],"sourcesContent":["import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  margin: 10px 50px;\n  padding: 8px 0;\n  color: white;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport default function BackLink ({ to, children }) {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" color= \"white\" />\n      {children}\n    </StyledLink>\n  );\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DetailMain = styled.div`\n// margin: 0 50px;\n//   padding: 0 50px;\n`;\n\nexport const MovieAbout = styled.div`\ndisplay: flex;\n\n  padding: 0 50px 0 50px;\nborder-bottom: 3px solid red;\n`;\n\nexport const MovieInfo = styled.div`\ndisplay: flex;\nflex-direction: column;\n  padding: 0 0 0 50px;\n`;\n\nexport const DetailImg = styled.img`\n  display: inline-block;\n  max-width: 30wv;\n  max-height: 50hv;\n  object-fit: cover;\n  overflow: hidden;\n  border-radius: 8px;\n  box-shadow: 4px 4px 4px rgba(247, 241, 241, 0.925);\n  margin: 0 0 10px 0;\n`;\n\nexport const DetailInfo = styled.div`\ndisplay: flex;\nflex-direction: column;\npadding: 20px 50px;\nmargin-bottom: 20px;\n  \n  border-bottom: 3px solid red;\n`;\n\nexport const Title2 = styled.h2`\ncolor: white;\npadding: 5px\n`\nexport const Title3 = styled.h3`\ncolor: white;\npadding: 5px\n`\nexport const DetailText = styled.p`\n  text-decoration: none;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  color: white;\n  padding: 5px\n \n`;\n\nexport const MovieLink = styled(NavLink)`\n\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  color: white;\n  padding: 5px\n\n  border: 2px solid red;\n  border-radius: 5px;\n\n  :hover {\n    color: red;\n  }\n`;","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieById } from 'service/API';\nimport BackLink from '../components/GoBackButton';\nimport NoImage from '../images/noImag.png';\nimport Spinner from '../components/Spinner/Spinner';\nimport { NotificationManager } from 'react-notifications';\nimport {\n  DetailMain,\n  DetailImg,\n  MovieAbout,\n  MovieInfo,\n  Title2,\n  Title3,\n  DetailInfo,\n  DetailText,\n  MovieLink,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(id)\n      .then(({ data }) => setMovie(data))\n      .catch(error =>\n        NotificationManager.warning(\n          'Sorry, something went wrong.... Please try again.'\n        )\n      );\n  }, [id]);\n\n  const { poster_path, title, genres, vote_average, overview } = movie;\n\n  return (\n    <DetailMain>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <MovieAbout>\n        <DetailImg\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : NoImage\n          }\n          alt={title}\n          width={'300px'}\n        />\n        <MovieInfo>\n          <Title2> {title} </Title2>\n          <DetailText>User Score: {Math.round(vote_average * 10)}%</DetailText>\n          <Title3>Owerview</Title3>\n          <DetailText>{overview}</DetailText>\n          {genres && (\n            <>\n              <Title3>Genres</Title3>\n\n              <ul>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>\n                    <DetailText>{name}</DetailText>\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n        </MovieInfo>\n      </MovieAbout>\n\n      <DetailInfo>\n        <Title3>Additional information</Title3>\n        <ul>\n          <li>\n            <MovieLink to=\"cast\" state={{ from: location.state?.from }}>\n              Cast\n            </MovieLink>\n          </li>\n          <li>\n            <MovieLink to=\"reviews\" state={{ from: location.state?.from }}>\n              Reviews\n            </MovieLink>\n          </li>\n        </ul>\n        <Suspense fallback={<Spinner />}>\n          <Outlet />\n        </Suspense>\n      </DetailInfo>\n    </DetailMain>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '?api_key=6295881d104dda08db4ad0327ab9a326';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = () =>\n  axios.get(`${BASE_URL}trending/movie/day${API_KEY}`);\n\nexport const getMovieById = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}${API_KEY}`);\n\nexport const getMovieBySearch = query =>\n  axios.get(`${BASE_URL}search/movie${API_KEY}&query=${query}`);\n\nexport const getCast = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}/credits${API_KEY}`);\n\nexport const getReviews = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}/reviews${API_KEY}`);\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","color","DetailMain","MovieAbout","MovieInfo","DetailImg","DetailInfo","Title2","Title3","DetailText","MovieLink","NavLink","MovieDetails","id","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","getMovieById","then","data","catch","error","NotificationManager","poster_path","title","genres","vote_average","overview","src","NoImage","alt","width","Math","round","map","name","Suspense","fallback","Spinner","API_KEY","BASE_URL","getTrending","axios","movieId","getMovieBySearch","query","getCast","getReviews"],"sourceRoot":""}