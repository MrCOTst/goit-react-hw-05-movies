{"version":3,"file":"static/js/770.f79eb2fa.chunk.js","mappings":"wRAEaA,EAASC,EAAAA,GAAAA,GAAH,iMAQNC,EAASD,EAAAA,GAAAA,GAAH,6UAWNE,EAAUF,EAAAA,GAAAA,IAAH,2IASPG,EAAWH,EAAAA,GAAAA,EAAH,2N,SCjBN,SAASI,IAClB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACV,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYF,OAVEC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAQN,GACPO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAQI,EAAKL,KAA3B,IACLM,OAAM,SAAAC,GAAK,OACVC,EAAAA,GAAAA,QACE,oDAFQ,GAKf,GAAE,CAACX,KAGJ,iCACC,SAACN,EAAD,UACQS,EAAKS,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACnB,EAAD,YACE,SAACC,EAAD,CAASmB,IACfH,EAAY,0CAC2BA,GACnCI,EAENC,IAAKJ,EACLK,MAAO,WAEC,SAACrB,EAAD,UAAWgB,KACX,SAAChB,EAAD,UAAWiB,MAVAf,EADL,OAeZ,SAAC,KAAD,MAGT,C,sKC9CKoB,EAAU,4CACVC,EAAW,gCAEJC,EAAc,kBACzBC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,6BAA0CD,GADjB,EAGdI,EAAe,SAAAC,GAAO,OACjCF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BI,GAA9B,OAAwCL,GADP,EAGtBM,EAAmB,SAAAC,GAAK,OACnCJ,EAAAA,GAAAA,IAAA,UAAaF,EAAb,uBAAoCD,EAApC,kBAAqDO,GADlB,EAGxBrB,EAAU,SAAAmB,GAAO,OAC5BF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BI,EAA9B,mBAAgDL,GADpB,EAGjBQ,EAAa,SAAAH,GAAO,OAC/BF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BI,EAA9B,mBAAgDL,GADjB,C","sources":["components/Cast.styled.js","components/Cast.jsx","service/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastUl = styled.ul`\ndisplay: grid;\nmax-width: calc(100vw - 48px);\ngrid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\ngrid-gap: 16px;\npadding: 20px 0 0 0;\nlist-style: none;\n`;\nexport const CastLi = styled.li`\nborder: 2px solid red;\nborder-radius: 8px;\n  box-shadow: 0px 4px 3px 0px rgba(246, 0, 0, 0.2),\n    4px 4px 4px 0px rgba(246, 247, 245, 0.14), 0px 2px 1px -1px rgba(246, 247, 245, 0.12);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover {\n      transform: scale(1.02);\n      }\n`;\nexport const CastImg = styled.img`\ndisplay: block;\nwidth: 100%;\n  height: 260px;\n  object-fit: cover;\n  overflow: hidden;\n  border-radius: 8px;\n`;\n\nexport const CastText = styled.p`\n\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  color: white;\n  padding: 0 15px\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCast} from 'service/API';\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport NoImage from '../images/noImag.png'\nimport { CastUl, CastLi, CastImg, CastText } from './Cast.styled';\n\n\n\nexport default function Cast() {\n      const { id } = useParams();\n    const [cast, setCast] = useState([]);\n      \n    useEffect(() => {\n        getCast(id)\n        .then(({ data }) => setCast(data.cast))\n        .catch(error =>\n          NotificationManager.warning(\n            'Sorry, something went wrong.... Please try again.'\n          )\n        );\n    }, [id]);\n\n  return (\n    <>\n     <CastUl>\n            {cast.map(({ id, profile_path, name, character }) => (\n              <CastLi key={id}>\n                <CastImg src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n            : NoImage\n        }\n        alt={name}\n        width={'300px'}\n      />\n                <CastText>{name}</CastText>\n                <CastText>{character}</CastText>\n              </CastLi>\n            ))}\n          </CastUl>\n          <NotificationContainer />\n    </>\n  );\n}","import axios from 'axios';\n\nconst API_KEY = '?api_key=6295881d104dda08db4ad0327ab9a326';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = () =>\n  axios.get(`${BASE_URL}trending/movie/day${API_KEY}`);\n\nexport const getMovieById = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}${API_KEY}`);\n\nexport const getMovieBySearch = query =>\n  axios.get(`${BASE_URL}search/movie${API_KEY}&query=${query}`);\n\nexport const getCast = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}/credits${API_KEY}`);\n\nexport const getReviews = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}/reviews${API_KEY}`);\n"],"names":["CastUl","styled","CastLi","CastImg","CastText","Cast","id","useParams","useState","cast","setCast","useEffect","getCast","then","data","catch","error","NotificationManager","map","profile_path","name","character","src","NoImage","alt","width","API_KEY","BASE_URL","getTrending","axios","getMovieById","movieId","getMovieBySearch","query","getReviews"],"sourceRoot":""}