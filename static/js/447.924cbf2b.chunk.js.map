{"version":3,"file":"static/js/447.924cbf2b.chunk.js","mappings":"0RAEaA,EAAYC,EAAAA,GAAAA,GAAH,mKASTC,EAAYD,EAAAA,GAAAA,GAAH,+WAaTE,EAAaF,EAAAA,GAAAA,IAAH,6HAQVG,EAAcH,EAAAA,GAAAA,EAAH,0NAYXI,EAASJ,EAAAA,GAAAA,GAAH,0D,SCjCJ,SAASK,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWN,GACRO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAAWI,EAAKC,QAA9B,IACLC,OAAM,SAAAC,GAAK,OACVC,EAAAA,GAAAA,QACE,oDAFQ,GAKf,GAAE,CAACZ,KAGF,gCACCG,EAAQU,OAAS,GACd,SAACpB,EAAD,UACCU,EAAQW,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,OAAQC,EAAf,EAAeA,eAAgBC,EAA/B,EAA+BA,QAA/B,OACX,UAACtB,EAAD,YACE,SAACC,EAAD,CACEsB,IACIF,EAAeG,YAAf,0CACqCH,EAAeG,aAClDC,EAENC,IAAKN,EACLO,MAAO,WAET,UAACxB,EAAD,WAASiB,EAAT,QACA,UAAClB,EAAD,WAAcoB,EAAd,SAXcjB,EADL,OAiBZ,SAACH,EAAD,0DAIH,SAAC,KAAD,MAGL,C,sKCnDK0B,EAAU,4CACVC,EAAW,gCAEJC,EAAc,kBACzBC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,6BAA0CD,GADjB,EAGdI,EAAe,SAAAC,GAAO,OACjCF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BI,GAA9B,OAAwCL,GADP,EAGtBM,EAAmB,SAAAC,GAAK,OACnCJ,EAAAA,GAAAA,IAAA,UAAaF,EAAb,uBAAoCD,EAApC,kBAAqDO,GADlB,EAGxBC,EAAU,SAAAH,GAAO,OAC5BF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BI,EAA9B,mBAAgDL,GADpB,EAGjBjB,EAAa,SAAAsB,GAAO,OAC/BF,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAA8BI,EAA9B,mBAAgDL,GADjB,C","sources":["components/Reviews.styled.js","components/Reviews.jsx","service/API.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 50px;\n  margin-bottom: 20px;\n\n  padding: 20px 0 0 0;\n  list-style: none;\n`;\nexport const ReviewsLi = styled.li`\n  margin-bottom: 20px;\n  border: 2px solid red;\n  border-radius: 8px;\n  box-shadow: 0px 4px 3px 0px rgba(246, 0, 0, 0.2),\n    4px 4px 4px 0px rgba(246, 247, 245, 0.14),\n    0px 2px 1px -1px rgba(246, 247, 245, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  // :hover {\n  //   transform: scale(1.02);\n  //   }\n`;\nexport const ReviewsImg = styled.img`\n  display: block;\n  height: 50%;\n  object-fit: cover;\n  overflow: hidden;\n  border-radius: 8px;\n`;\n\nexport const ReviewsText = styled.p`\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  color: white;\n  padding: 0 15px;\n`;\n\nexport const Title3 = styled.h3`\n  color: white;\n  padding: 5px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from 'service/API';\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport NoImage from '../images/noImag.png';\nimport {ReviewsImg, ReviewsLi, ReviewsText, ReviewsUl, Title3} from './Reviews.styled'\n\nexport default function Reviews() {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getReviews(id)\n      .then(({ data }) => setReviews(data.results))\n      .catch(error =>\n        NotificationManager.warning(\n          'Sorry, something went wrong.... Please try again.'\n        )\n      );\n  }, [id]);\n\n  return (\n    <>\n    {reviews.length > 0 ? (\n        <ReviewsUl>\n        {reviews.map(({ id, author, author_details, content }) => (\n          <ReviewsLi key={id} >\n            <ReviewsImg\n              src={\n                  author_details.avatar_path\n                  ? `https://image.tmdb.org/t/p/w500/${author_details.avatar_path}`\n                  : NoImage\n              }\n              alt={author}\n              width={'100px'}\n            />\n            <Title3>{author} </Title3>\n            <ReviewsText>{content} </ReviewsText>\n          </ReviewsLi>\n        ))}\n  \n  </ReviewsUl>\n    ) : (<ReviewsText>We do not have any reviews for this movie.</ReviewsText>)\n\n    }\n\n      <NotificationContainer />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '?api_key=6295881d104dda08db4ad0327ab9a326';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = () =>\n  axios.get(`${BASE_URL}trending/movie/day${API_KEY}`);\n\nexport const getMovieById = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}${API_KEY}`);\n\nexport const getMovieBySearch = query =>\n  axios.get(`${BASE_URL}search/movie${API_KEY}&query=${query}`);\n\nexport const getCast = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}/credits${API_KEY}`);\n\nexport const getReviews = movieId =>\n  axios.get(`${BASE_URL}movie/${movieId}/reviews${API_KEY}`);\n"],"names":["ReviewsUl","styled","ReviewsLi","ReviewsImg","ReviewsText","Title3","Reviews","id","useParams","useState","reviews","setReviews","useEffect","getReviews","then","data","results","catch","error","NotificationManager","length","map","author","author_details","content","src","avatar_path","NoImage","alt","width","API_KEY","BASE_URL","getTrending","axios","getMovieById","movieId","getMovieBySearch","query","getCast"],"sourceRoot":""}